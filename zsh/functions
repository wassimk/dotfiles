####
## Typora
####
typora() {
    if [ "$1" != "" ]
    then
      open -a typora $1
    else
      open -a typora "$HOME"/Dropbox/docs
    fi
}

####
# tmux
####
# Create new sessions
tmn() {
    if [ "$1" != "" ]
    then
      tmux new -s $1
    else
      tmux new -s hacking
    fi
}

# Attach to session
tma() {
    if [ "$1" != "" ]
    then
      tmux attach -t $1
    else
      tmux attach
    fi
}

# Kill session
tmk() {
    if [ "$1" != "" ]
    then
        tmux kill-session -t $1
    else
     echo "Kill which session?"
      tml
    fi
}

# Make sure we are always in TMUX, uses "$HOME"/.bin/tat script
_not_inside_tmux() { [[ -z "$TMUX" ]] }

ensure_tmux_is_running() {
  if _not_inside_tmux; then
    if [ -d $DOTFILES ]; then
      cd $DOTFILES
      tat
    else
      tat
    fi
  fi
}

# Make CTRL-Z background and unbackground
function fg-bg() {
  if [[ $#BUFFER -eq 0 ]]; then
    fg
  else
    zle push-input
  fi
}
zle -N fg-bg
bindkey '^Z' fg-bg

####
# git
# g for git status
# -or-
# g anything else for git anything else
####
function g {
  if [[ $# > 0 ]]; then
    git $@
  else
    git status
  fi
}

# Complete g like git
compdef g=git

####
# Other Functions
####
# Auto complete for Planning Center Code directory
w() { cd "$HOME"/Work/"$1" && ll }
_w() { _files -W "$HOME"/Work -/ }
compdef _w w

# Auto complete for Personal code directory
p() { cd "$HOME"/Personal/"$1" && ll }
_p() { _files -W "$HOME"/Personal -/ }
compdef _p p

# Auto complete for Business code directory
b() { cd "$HOME"/Business/"$1" && ll }
_b() { _files -W "$HOME"/Business -/ }
compdef _b b

# Auto complete for home directory
h() { cd "$HOME"/"$1" && la }
_h() { _files -W "$HOME"/ -/ }
compdef _h h

# Console based weather report, way cool
weather() {
    if [ "$1" != "" ]
    then
        curl wttr.in/${1}
    else
        curl wttr.in/74037
    fi
}

# Aggregated man pages
cheat() {
    curl cheat.sh/"$1"
}

#
# Hooks
#
autoload -U add-zsh-hook

function -auto-ls-after-cd() {
  emulate -L zsh
  # Only in response to a user-initiated `cd`, not indirectly (eg. via another
  # function).
  if [ "$ZSH_EVAL_CONTEXT" = "toplevel:shfunc" ]; then
    ll
  fi
}
add-zsh-hook chpwd -auto-ls-after-cd
